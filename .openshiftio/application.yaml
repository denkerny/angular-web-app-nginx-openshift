apiVersion: v1
kind: Template
metadata:
  name: angular-web-app-3
  annotations:
    iconClass: icon-jboss
    tags: nodejs, angular, web app
    template.openshift.io/provider-display-name: "Red Hat, Inc."
    description: Just building a little angular app with a Node builder
labels:
  application: modern-web-app
parameters:
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    value: "https://github.com/kernyden/angular-web-app-nginx-openshift"
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: main
    required: true
  - name: SOURCE_REPOSITORY_DIR
    description: The location within the source repo of the application
    displayName: Source Directory
    value: .
    required: true
  - name: OUTPUT_DIR
    description: The location of the compiled static files from your web apps builder
    displayName: Output Directory
    value: build
    required: false
  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook.
    displayName: GitHub Webhook Secret
    required: true
    from: '[a-zA-Z0-9]{40}'
    generate: expression
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: angular-web-app-builder #1
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name:  static-web-app-running-on-nginx #2
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: node-ubi-s2i-image #3
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: registry.access.redhat.com/ubi8/nodejs-14:latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: nginx-image-runtime #4
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: 'centos/nginx-112-centos7:latest'
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: angular-web-app-builder
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: angular-web-app-builder:latest #1
    postCommit: {}
    resources: {}
    source: #2
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      contextDir: ${SOURCE_REPOSITORY_DIR}
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: OUTPUT_DIR
            value: ${OUTPUT_DIR}
        from:
          kind: ImageStreamTag
          name: node-ubi-s2i-image:latest #3
        incremental: true
      type: Source
    triggers: #4
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: static-web-app-running-on-nginx
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: static-web-app-running-on-nginx:latest #1
    postCommit: {}
    resources: {}
    source: #2
      type: Image
      images:
        - from:
            kind: ImageStreamTag
            name: angular-web-app-builder:latest #3
          paths:
            - destinationDir: . #4
              sourcePath: /opt/app-root/src/${OUTPUT_DIR}/. #5
    strategy: #6
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nginx-image-runtime:latest
        incremental: true
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - type: ConfigChange
    - type: ImageChange
      imageChange: {}
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: angular-web-app-builder:latest #7
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: angular-web-app-3
    name: angular-web-app-3
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: angular-web-app-3
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        labels:
          app: angular-web-app-3
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: static-web-app-running-on-nginx
          imagePullPolicy: IfNotPresent
          name: static-web-app-running-on-nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
      metadata:
        labels:
          app: angular-web-app-3
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - static-web-app-running-on-nginx
          from:
            kind: ImageStreamTag
            name: 'static-web-app-running-on-nginx:latest'
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: angular-web-app-3
    name: angular-web-app-3
  spec:
    ports:
    - name: http
      port: 8080
    selector:
      app: angular-web-app-3
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: angular-web-app-3
    name: angular-web-app-3
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: angular-web-app-3